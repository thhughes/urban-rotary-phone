/*******************************************************************************
 * This files was developed for CS4233: Object-Oriented Analysis & Design.
 * The course was taken at Worcester Polytechnic Institute.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Copyright Â©2016 Gary F. Pollice
 *******************************************************************************/

package tollbooth.gatecontroller;

import tollbooth.TollboothException;

/**
 * Description
 * @version Feb 15, 2016
 */
public class TestGateController implements GateController
{
	boolean isOpen;
	boolean isResponsive; 
	int numFails; 
	/**
	 * Constructor for the test gate controller.
	 */
	public TestGateController()
	{
		isOpen = false;
		isResponsive = true;
		numFails = 0;
		failCount = 0;
	}
	
	/*
	 * @see tollbooth.gatecontroller.GateController#open()
	 */
	@Override
	public void open() throws TollboothException
	{
		if(numFails > 0){
			numFails--;
			throw new TollboothException("Open: Failed");
		}
		if(!isResponsive){
			throw new TollboothException("System Unresponsive");
		}
		isOpen = true;
	}
	

	/*
	 * @see tollbooth.gatecontroller.GateController#close()
	 */
	@Override
	public void close() throws TollboothException
	{
		if(numFails > 0){
			numFails--;
			throw new TollboothException("Close: Failed");
		}
		if(!isResponsive){
			throw new TollboothException("System Unresponsive");
		}
		isOpen = false;

	}

	/*
	 * @see tollbooth.gatecontroller.GateController#reset()
	 */
	@Override
	public void reset() throws TollboothException
	{
		if(numFails > 0){
			numFails--;
			throw new TollboothException("Reset: Failed");
		}
		if(!isResponsive){
			throw new TollboothException("System Unresponsive");
		}
		isOpen = false;

	}

	/*
	 * @see tollbooth.gatecontroller.GateController#isOpen()
	 */
	@Override
	public boolean isOpen() throws TollboothException
	{
		return isOpen;
	}
	
	/**
	 * This tells the gate to fail N times and sets the system to be in unresponsive mode or not. 
	 * @param N : number of times the gate fails. 
	 * @param unresponsive : True for 'will not respond' state
	 */
	public void failNTimes(int N, boolean unresponsive)
	{

		numFails = N;
		isResponsive = !unresponsive;
		
	}

}
